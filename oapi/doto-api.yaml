openapi: "3.0.0"
info:
  title: Doto API
  version: 1.0.0
paths:
  /tasks:
    get: 
      summary: Get all tasks
      parameters:
        - name: TgChatId
          in: header
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
    post:
      summary: Create task
      parameters:
        - name: TgChatId
          in: header
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreation"
        required: true
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"

  /tasks/{taskId}:
    put:
      summary: Update task status
      parameters:
      - name: TgChatId
        in: header
        required: true
        schema:
          type: integer
          format: int64
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskStatusUpdate"
        required: true
      responses:
        '200':
          description: Task status updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
    delete:
      summary: Delete task
      parameters:
      - name: TgChatId
        in: header
        required: true
        schema:
          type: integer
          format: int64
      - name: taskId
        in: path
        required: true
        schema: 
          type: integer
          format: int64
      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"

components:
  schemas:
    ApiErrorResponse:
      type: object
      required:
        - code
        - description
      properties:
        code: 
          type: integer 
          format: int64
        description:
          type: string

    Task:
      type: object
      required:
        - id
        - description
        - status
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        status: 
          type: string

    TaskCreation:
      type: object
      required:
        - description
        - status
      properties:
        description:
          type: string
        status:
          type: string
          default: "pending"
          enum: ["pending", "in_progress", "completed"]
    
    TaskStatusUpdate:
      type: object
      required: 
        - status
      properties:
        status:
          type: string
          enum: ["pending", "in_progress", "completed"]